"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Port(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    uid: typing.Text
    name: typing.Text
    def __init__(
        self,
        *,
        uid: typing.Text = ...,
        name: typing.Text = ...,
    ) -> None: ...
    def ClearField(
        self, field_name: typing_extensions.Literal["name", b"name", "uid", b"uid"]
    ) -> None: ...

global___Port = Port

class Connection(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FROM_PORT_FIELD_NUMBER: builtins.int
    TO_PORT_FIELD_NUMBER: builtins.int
    @property
    def from_port(self) -> global___Port: ...
    @property
    def to_port(self) -> global___Port: ...
    def __init__(
        self,
        *,
        from_port: typing.Optional[global___Port] = ...,
        to_port: typing.Optional[global___Port] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "from_port", b"from_port", "to_port", b"to_port"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "from_port", b"from_port", "to_port", b"to_port"
        ],
    ) -> None: ...

global___Connection = Connection

class Cell(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UID_FIELD_NUMBER: builtins.int
    CODE_FIELD_NUMBER: builtins.int
    IN_PORTS_FIELD_NUMBER: builtins.int
    OUT_PORTS_FIELD_NUMBER: builtins.int
    OUTPUT_FIELD_NUMBER: builtins.int
    uid: typing.Text
    code: typing.Text
    @property
    def in_ports(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Port
    ]:
        """Cell ins/outs are updated whenever a cell is compiled."""
        pass
    @property
    def out_ports(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Port
    ]: ...
    output: typing.Text
    def __init__(
        self,
        *,
        uid: typing.Text = ...,
        code: typing.Text = ...,
        in_ports: typing.Optional[typing.Iterable[global___Port]] = ...,
        out_ports: typing.Optional[typing.Iterable[global___Port]] = ...,
        output: typing.Optional[typing.Text] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_output", b"_output", "output", b"output"
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_output",
            b"_output",
            "code",
            b"code",
            "in_ports",
            b"in_ports",
            "out_ports",
            b"out_ports",
            "output",
            b"output",
            "uid",
            b"uid",
        ],
    ) -> None: ...
    def WhichOneof(
        self, oneof_group: typing_extensions.Literal["_output", b"_output"]
    ) -> typing.Optional[typing_extensions.Literal["output"]]: ...

global___Cell = Cell

class Graph(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ROOT_FIELD_NUMBER: builtins.int
    CELLS_FIELD_NUMBER: builtins.int
    CONNECTIONS_FIELD_NUMBER: builtins.int
    SELECTED_CELL_FIELD_NUMBER: builtins.int
    @property
    def root(self) -> global___Cell: ...
    @property
    def cells(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Cell
    ]: ...
    @property
    def connections(
        self,
    ) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[
        global___Connection
    ]: ...
    selected_cell: typing.Text
    def __init__(
        self,
        *,
        root: typing.Optional[global___Cell] = ...,
        cells: typing.Optional[typing.Iterable[global___Cell]] = ...,
        connections: typing.Optional[typing.Iterable[global___Connection]] = ...,
        selected_cell: typing.Optional[typing.Text] = ...,
    ) -> None: ...
    def HasField(
        self,
        field_name: typing_extensions.Literal[
            "_selected_cell",
            b"_selected_cell",
            "root",
            b"root",
            "selected_cell",
            b"selected_cell",
        ],
    ) -> builtins.bool: ...
    def ClearField(
        self,
        field_name: typing_extensions.Literal[
            "_selected_cell",
            b"_selected_cell",
            "cells",
            b"cells",
            "connections",
            b"connections",
            "root",
            b"root",
            "selected_cell",
            b"selected_cell",
        ],
    ) -> None: ...
    def WhichOneof(
        self,
        oneof_group: typing_extensions.Literal["_selected_cell", b"_selected_cell"],
    ) -> typing.Optional[typing_extensions.Literal["selected_cell"]]: ...

global___Graph = Graph
